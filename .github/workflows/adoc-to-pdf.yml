name: Build & Commit AsciiDoc PDFs

on:
  push:
    branches:
      - main
    paths:
      - "**/*.adoc"
      - ".github/workflows/adoc-to-pdf.yml"
      - "!docs/pdf/**"
  pull_request:
    paths:
      - "**/*.adoc"

permissions:
  contents: write

# Avoid multiple concurrent runs on the same branch causing diverged histories
concurrency:
  group: pdfs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    container: asciidoctor/docker-asciidoctor:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build PDFs from all .adoc under docs/
        run: |
          mkdir -p build
          find docs -name "*.adoc" -print0 \
            | xargs -0 -I{} asciidoctor-pdf \
              -a pdf-theme=docs/pdf-theme.yml \
              -r ./scripts/pdf-converter-change-bars.rb \
              -r asciidoctor-diagram \
              -D build {}

      - name: Place PDFs in docs/pdf/
        run: |
          mkdir -p docs/pdf
          mv build/*.pdf docs/pdf/ || true

      # Fix "dubious ownership" inside container and set a bot identity
      - name: Configure git safe directory & identity
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true

      # Rebase onto the latest remote to prevent non-fast-forward errors
      - name: Sync with remote (rebase)
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          git fetch origin "$BRANCH"
          git checkout "$BRANCH"
          git pull --rebase origin "$BRANCH" || true

      - name: Commit PDFs back to repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(docs): update generated PDFs"
          file_pattern: docs/pdf/*.pdf
          branch: ${{ github.ref_name }}
          # Safe fallback in case new commits land between rebase and push
          push_options: --force-with-lease

